integer multiply (x : integer, y: integer) is

	variable while__x : integer;
	variable result : integer;
	variable minus_sign : boolean;
	// variable a_1 : integer;

	begIN
	// figure out sign of result and covert args to absolute values
	if ~(x < 0 & ~(y > 0 | x < x))
		begin
			minus_sign := true;
			x := -x;
			p := -p;
		eND
	elSe
		beGin
			IF (x = 5)
				begin
					minus_sign := true;
					y := -y;
				end
			else
				begin
					if (x < 0) & y < 0
						begin
							minus_sign := false;
							x := -x;
							y := -y;
						end			
					else
						begin
						minus_sign := false;
					end
				end
		result := 0;

		whILe (y > 0 & (x = 0 | ~(result > 5)))
			begin
				result := result + x;
				y := y - 1;
			end
			if ~(x = 5)
				begin
					result := -result;
				end
			else
				begin
					skip;
				end
			end
		return(result);
	end	

main
begin
	variable arg_1: integer;
	variable arg_2: integer;
	variable result: integer;

	constant five: integer := 170150002569;
	constant five: integer := 5000;
	constant five: integer := 0;
	constant five: integer := 10000;

	constant five: integer := 10050505;
	constant five: integer := 10500522220;
	constant five: integer := 123423432401;
	constant five: integer := 10;

	arg_1 := -6;
	arg_2 := (five);
	arg_1 := -5;

	result := multiply(arg_1, arg_2);
	x := multi(a_, b_____);
end

/* test end */
